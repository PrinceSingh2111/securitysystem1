package com.example.securitysystem;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.StringTokenizer;


import android.app.ProgressDialog;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.provider.ContactsContract;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.toolbox.ImageLoader;
import com.squareup.picasso.Callback;
import com.squareup.picasso.Picasso;
//import com.squareup.picasso.Picasso;

import static android.graphics.BitmapFactory.decodeFile;

public class getvulnerability extends AsyncTask<String , Void , String> {
    Context context;
    String ans="n";

    ImageView iv1;
    EditText et1;
    AppCompatActivity appCompatActivity;

    ArrayList<String> applist = new ArrayList<String>();
    ArrayList<String> desclist = new ArrayList<String>();
    ArrayList<String> Iconlist = new ArrayList<String>();

    RecyclerView recyclerView;
    ProgressDialog progressDialog;
    public getvulnerability(Context context, RecyclerView recyclerView, EditText et1, ProgressDialog progressDialog, AppCompatActivity appCompatActivity) {
        this.context = context;
        this.recyclerView = recyclerView;
        this.iv1 = iv1;
        this.et1=et1;
        this.progressDialog=progressDialog;
        this.appCompatActivity = appCompatActivity;


    }


    protected void onPreExecute() {
    }

    @Override
    protected String doInBackground(String... arg0) {
        try {

            LinearLayoutManager linearLayoutManager = new LinearLayoutManager(context.getApplicationContext(), LinearLayoutManager.VERTICAL, true);
            recyclerView.setLayoutManager(linearLayoutManager);

            String link = "https://zsupsecurity.000webhostapp.com/secure/admin/newdemo.php";

            URL url = new URL(link);
            URLConnection conn = url.openConnection();


            BufferedReader reader = new BufferedReader(new
                    InputStreamReader(conn.getInputStream()));

            StringBuilder sb = new StringBuilder();
            String line = null;

            // Read Server Response
            while ((line = reader.readLine()) != null) {
                sb.append(line);
                break;
            }

            return sb.toString();
        } catch (Exception e) {
            return new String("Exception: " + e.getMessage());
        }
    }

    @Override
    protected void onPostExecute(String result) {
         if(result.charAt(result.length()-1)=='y')
        {
            ans="y";
        }
        else
        {
            ans="n";
        }
        StringTokenizer st = new StringTokenizer(result, "%");
        int z = st.countTokens();
        int i;
        for (i = 0; i < z; i++) {
            StringTokenizer st1 = new StringTokenizer(st.nextToken(), "&");

            applist.add(st1.nextToken());
            desclist.add(st1.nextToken());
            Iconlist.add(st1.nextToken());


        }
        i=i-1;
        if(Iconlist.get(i)!="")
        {
            progressDialog.dismiss();
        }

        /*        Drawable d=LoadImageFromWebOperations(link2);
        iv1.setImageDrawable(d);

*/
        customadapterforallapp ca=new customadapterforallapp(context.getApplicationContext(),applist,desclist, Iconlist,ans,appCompatActivity,progressDialog);
        recyclerView.setAdapter(ca);

        et1.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void afterTextChanged(Editable editable) {
                //after the change calling the method and passing the search input
        /*if(editable==null)
        {
            recyclerView.removeAllViews();
        }
        else
        {

        }*/
                 filter(editable.toString());

            }
        });



    }


    private void filter(String text) {

           if(text.equals(""))
           {   progressDialog=new ProgressDialog(appCompatActivity);
               progressDialog.show();
               progressDialog.setContentView(R.layout.progress_dialog);
               progressDialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);

               customadapterforallapp ca=new customadapterforallapp(context.getApplicationContext(),applist,desclist, Iconlist,ans,appCompatActivity,progressDialog);
               recyclerView.setAdapter(ca);

           }else {
               for (int i = 0; i < applist.size(); i++) {


                   if (applist.get(i).toLowerCase().contains(text.toLowerCase())) {
                       //adding the element to filtered list
                       customadapterforallappsearch ca = new customadapterforallappsearch(context.getApplicationContext(), applist.get(i), desclist.get(i), Iconlist.get(i), appCompatActivity);
                       recyclerView.setAdapter(ca);

                       break;

                   }
               }
           }

        //calling a method of the adapter class and passing the filtered list
     }
}
